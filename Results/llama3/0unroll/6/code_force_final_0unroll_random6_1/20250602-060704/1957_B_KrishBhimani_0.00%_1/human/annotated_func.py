#State of the program right berfore the function call: stdin contains an integer t (1 <= t <= 10^4) followed by t lines, each containing two integers n and k (1 <= n <= 2 * 10^5, 1 <= k <= 10^9).
    for _ in range(int(input())):
        l1 = input().split()
        
        n, k = list(map(int, l1))
        
        arr = []
        
        k0 = k
        
        i = 0
        
        while k:
            if k & 1 == 1:
                arr.append(i)
            k = k >> 1
            i += 1
        
        ans = []
        
        c = 0
        
        for i in arr:
            if c == n - 1:
                ans.append(k0 - sum(ans))
                break
            c += 1
            ans.append(1 << i)
        
        ans += [0] * (n - len(ans))
        
        print(*ans)
        
    #State: The output state is a series of binary representations of the numbers from 1 to n, where n is the first integer in each line of the input, and the binary representation is generated based on the second integer k in each line. The binary representation is generated by iterating through the bits of k from right to left, and for each bit that is 1, the corresponding power of 2 is added to the output list. If the length of the output list is less than n, the remaining elements are filled with 0. The output list is then printed.

#Overall this is what the function does:The function reads a series of input lines, where each line contains two integers n and k. It generates a binary representation of the numbers from 1 to n based on the bits of k, and prints the resulting list. If the length of the list is less than n, the remaining elements are filled with 0. The function repeats this process for each input line.

