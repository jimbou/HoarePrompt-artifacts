task_id,model_created,dataset,model_run,code,fail_reason,type_of_run
1948_C,human,codeforces2024,llama-v3p1-70b-instruct,"for i in range(int(input())):
    n=int(input())
    a=input()
    b=input()
    if b[-2]!="">"":
        print(""NO"")
    elif n==1:
        print(""YES"")
    else:
        no_path=True
        for k in range(0,n,2):
            
            if b[k]!="">"":
                no_path=False
        if not no_path:
            no_path=True
            for k in range(1,n-1,2):
                print(k)
                if a[k]!="">"":
                    no_path=False
        if no_path:
            print(""YES"")
        else:
            print(""NO"")",Error: [Errno 2] No such file or directory: 'temp_program.py',hoareprompt
1927_B,human,codeforces2024,llama-v3p1-70b-instruct,"a='abcdefghijklmnopqrstuvwxyz'
 
for t in range(int(input())):
  b=[0]*26
  n=int(input())
  s=list(map(int,input().split()))
  r=''
  for i in s:
    
    x=b.index(i)
  
    r+=a[x]
    b[x]+=1
  print(r)",Error: [Errno 2] No such file or directory: 'temp_program.py',hoareprompt
1927_E,human,codeforces2024,llama-v3p1-70b-instruct,"for _ in range(int(input())):
    n,k = map(int,input().split())
    array = list(range(1,n+1))
    answer = [1]
    a = [1,-1]
    for i in range(1,n):
        if (-1)**i == -1:
            answer.append(array[a[-1]])
            a[-1] -= 1
        else:
            answer.append(array[a[0]])
            a[0] += 1
    print(*answer)",Error: [Errno 2] No such file or directory: 'temp_program.py',hoareprompt
1927_B,human,codeforces2024,llama-v3p1-70b-instruct,"for i in range(int(input())):
  l=int(input())
  s=[0 for i in range(l)]
  array=list(map(int,input().split()))
  ans=""""
  for j in array:
    ans+=chr(s[j]+97)
    s[j]+=1
  print(ans)",Error: [Errno 2] No such file or directory: 'temp_program.py',hoareprompt
1927_D,human,codeforces2024,llama-v3p1-70b-instruct,"from collections import *
from math import log,log2,pow,gcd,ceil,floor
from heapq import *
import sys
from bisect import *
 
def sol():
    input = sys.stdin.readline
    N = int(input())
    nums = list(map(int,input().split()))
    s = 0
    e = 0
    num = nums[0]
    arr = []
    nums.append(-1)
    for i in range(N+1):
        if nums[i] != num:
            arr.append((1+s,i,num))
            s = i
        
        num = nums[i]
    # print(nums)
    # print(arr)
    LA = len(arr)-1
    for _ in range(int(input())):
        l,r = tuple(map(int,input().split()))
        eli = bisect_left(arr,(l,0,0))
        # if eli >= LA:s,e,_ = arr[-1]
        s,e,_ = arr[min(eli,LA)]
        # print(s,e,_)
        # print(l,r ,end = ""   = "")
        if s > l:
            if s == 1 or s > r:print(-1,-1)
            else:print(s-1,s)
        elif e >= r:print(-1,-1)
        else:
            if e < N or e < l:print(s,e+1)
            else:print(-1,-1)
        
    # print()    
 
tc= int(input())
 
 
for ppp in range(tc):
    sol()",Error: [Errno 2] No such file or directory: 'temp_program.py',hoareprompt
1945_B,human,codeforces2024,llama-v3p1-70b-instruct,"t=int(input())
for i in range(t):
  a,b,m=map(int,input().split())
  print(m//a+m//b+2)",Error: [Errno 2] No such file or directory: 'temp_program.py',hoareprompt
1921_E,human,codeforces2024,llama-v3p1-70b-instruct,"test_cases = int(input())
answers = []
for i in range(test_cases):
    clues = list(map(int,input().split("" "")))
    if clues[2] > clues[4] or clues[0]==1:
        answers.append(""Draw"")
    elif(clues[2]%2==0 and clues[4]%2==0) or (clues[2]%2!=0 and clues[4]%2!=0):
        if clues[3] == clues[5]:
            answers.append(""Bob"")
        elif clues[3]<clues[5]:
            if abs(clues[3]-clues[5])>1:
                if clues[3]-1 >= abs((clues[2]-clues[4])//2) or clues[5]-clues[3] >= abs((clues[2]-clues[4])//2):
                    answers.append(""Draw"")
                else:
                    answers.append(""Bob"")
            else:
                if clues[3]-1 > abs((clues[2]-clues[4])//2) or clues[5]-clues[3] > abs((clues[2]-clues[4])//2):
                    answers.append(""Draw"")
                else:
                    answers.append(""Bob"")
        elif clues[3]>clues[5]:
            if abs(clues[3]-clues[5])>1:
                if clues[1]-clues[3]>= abs((clues[2]-clues[4])//2) or clues[3]-clues[5] >= abs((clues[2]-clues[4])//2):
                    answers.append(""Draw"")
                else:
                    answers.append(""Bob"")
            else:
                if clues[1]-clues[3]> abs((clues[2]-clues[4])//2) or clues[3]-clues[5] > abs((clues[2]-clues[4])//2):
                    answers.append(""Draw"")
                else:
                    answers.append(""Bob"")
    else:
        if clues[3] == clues[5]:
            answers.append(""Alice"")
        elif clues[3]<clues[5]:
            if abs(clues[3]-clues[5])>1:
                if clues[1]-clues[5] > abs((clues[2]-clues[4])//2) or clues[5]-clues[3] > abs((clues[2]-clues[4])//2):
                    answers.append(""Draw"")
                else:
                    answers.append(""Alice"")
            else:
                if clues[1]-clues[5]-1 > abs((clues[2]-clues[4])//2) or clues[5]-clues[3]-1 > abs((clues[2]-clues[4])//2):
                    answers.append(""Draw"")
                else:
                    answers.append(""Alice"")
        elif clues[3]>clues[5]:
            if abs(clues[3]-clues[5])>1:
                if clues[5]-1 > abs((clues[2]-clues[4])//2) or clues[3]-clues[5] > abs((clues[2]-clues[4])//2):
                    answers.append(""Draw"")
                else:
                    answers.append(""Alice"")
            else:
                if clues[5]-1-1 > abs((clues[2]-clues[4])//2) or clues[3]-clues[5]-1 > abs((clues[2]-clues[4])//2):
                    answers.append(""Draw"")
                else:
                    answers.append(""Alice"")
for j in answers:
    print(j)",Error: [Errno 2] No such file or directory: 'temp_program.py',hoareprompt
1941_F,human,codeforces2024,llama-v3p1-70b-instruct,"from collections import *
from math import *
from heapq import *
from bisect import *
 
import sys
from os import path
 
class FenwickTree:
    def __init__(self, x):
        bit = self.bit = list(x)
        size = self.size = len(bit)
        for i in range(size):
            j = i | (i + 1)
            if j < size:
                bit[j] += bit[i]
 
    def update(self, idx, x):
        """"""updates bit[idx] += x""""""
        while idx < self.size:
            self.bit[idx] += x
            idx |= idx + 1
 
    def __call__(self, end):
        """"""calc sum(bit[:end])""""""
        x = 0
        while end:
            x += self.bit[end - 1]
            end &= end - 1
        return x
 
    def find_kth(self, k):
        """"""Find largest idx such that sum(bit[:idx]) <= k""""""
        idx = -1
        for d in reversed(range(self.size.bit_length())):
            right_idx = idx + (1 << d)
            if right_idx < self.size and self.bit[right_idx] <= k:
                idx = right_idx
                k -= self.bit[idx]
        return idx + 1, k
 
 
class SortedList:
    block_size = 700
 
    def __init__(self, iterable=()):
        self.macro = []
        self.micros = [[]]
        self.micro_size = [0]
        self.fenwick = FenwickTree([0])
        self.size = 0
        for item in iterable:
            self.insert(item)
 
    def insert(self, x):
        i = bisect_left(self.macro, x)
        j = bisect_right(self.micros[i], x)
        self.micros[i].insert(j, x)
        self.size += 1
        self.micro_size[i] += 1
        self.fenwick.update(i, 1)
        if len(self.micros[i]) >= self.block_size:
            self.micros[i:i + 1] = self.micros[i][:self.block_size >> 1], self.micros[i][self.block_size >> 1:]
            self.micro_size[i:i + 1] = self.block_size >> 1, self.block_size >> 1
            self.fenwick = FenwickTree(self.micro_size)
            self.macro.insert(i, self.micros[i + 1][0])
 
    def pop(self, k=-1):
        i, j = self._find_kth(k)
        self.size -= 1
        self.micro_size[i] -= 1
        self.fenwick.update(i, -1)
        return self.micros[i].pop(j)
 
    def __getitem__(self, k):
        i, j = self._find_kth(k)
        return self.micros[i][j]
 
    def count(self, x):
        return self.bisect_right(x) - self.bisect_left(x)
 
    def __contains__(self, x):
        return self.count(x) > 0
 
    def bisect_left(self, x):
        i = bisect_left(self.macro, x)
        return self.fenwick(i) + bisect_left(self.micros[i], x)
 
    def bisect_right(self, x):
        i = bisect_right(self.macro, x)
        return self.fenwick(i) + bisect_right(self.micros[i], x)
 
    def _find_kth(self, k):
        return self.fenwick.find_kth(k + self.size if k < 0 else k)
 
    def __len__(self):
        return self.size
 
    def __iter__(self):
        return (x for micro in self.micros for x in micro)
 
    def __repr__(self):
        return str(list(self))
 
def cache(func):
    d = {}
    def wrapper(*args):
        if args not in d:
            d[args] = func(*args)
        return d[args]
    return wrapper
 
def input():
    return sys.stdin.readline().strip()
 
def input_int():
    return int(input())
 
def input_list(delimiter=' '):
    return list(map(int,input().split(delimiter)))
 
def input_string():
    return input()
 
def solve():
    n, m, k = input_list()
    A = input_list()
    D = sorted(set(input_list()))
    F = input_list()
    
    max_diff, next_max_diff, index = -inf, -inf, None
    for i in range(1, n):
        diff = A[i] - A[i-1]
        if diff > max_diff:
            next_max_diff = max_diff
            max_diff = diff
            index = i
        elif diff > next_max_diff:
            next_max_diff = diff
    left, right = A[index-1], A[index]
    ans = max_diff
    for f in F:
        l = bisect_right(D, left - f)
        h = bisect_left(D, right - f) - 1
        while l < h:
            mid = l + (h - l) // 2
            mid_sum, mid_next_sum = D[mid] + f, D[mid+1] + f
            # print(f, l, h, mid, mid_sum, mid_next_sum)
            if mid_sum - left < right - mid_next_sum:
                l = mid + 1
            else:
                h = mid
        if l == h:
            ans = min(ans, max(D[l] + f - left, right - D[l] - f))
    
    print(max(ans, next_max_diff))
 
def main():
    testcases = input_int()
    # testcases = 1
    for _ in range(testcases):
        solve()
 
if __name__ == ""__main__"":
    if(path.exists('input.txt')): 
        sys.stdin = open(""input.txt"",""r"")
        sys.stdout = open(""output.txt"",""w"")
    main()",Error: [Errno 2] No such file or directory: 'temp_program.py',hoareprompt
